version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.x
    commands:
      - echo "Installing Terraform..."
      - curl -LO https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
      - unzip -o terraform_1.6.6_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - kubectl version --client

  pre_build:
    commands:
      - cd terraform_infra
      - terraform init -backend-config="bucket=selmicapstones3" -backend-config="key=terraform.tfstate" -backend-config="region=us-east-1" -backend-config="dynamodb_table=terraform-lock-table"

  build:
    commands:
      - echo "Setting up kubeconfig..."
      - aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_REGION}
      - terraform validate
      - echo "Applying only EKS cluster first"
      - terraform apply -target=module.eks -auto-approve

      - echo "Waiting for EKS cluster to be ready..."
      - |
        for i in {1..20}; do
          aws eks describe-cluster --name ${CLUSTER_NAME} --region ${AWS_REGION} --query "cluster.status" --output text | grep -q ACTIVE && break || sleep 15
        done

      - echo "Applying rest of Terraform including aws-auth ConfigMap"
      - terraform apply -auto-approve
